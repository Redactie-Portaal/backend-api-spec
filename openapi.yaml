components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: A token retrieved from `authd`. If the token contains an `aud` claim, then Clapy expects it to contain the value `clapy`, otherwise the token will be rejected. Tokens with no `aud` claim are also accepted.
info:
  title: API Specificatie Redactie portaal.
  description: Dit document bevat de API specificaties van het Redactie portaal back-end.
  version: 0.0.1
servers:
  - url: https://host/api/v1
openapi: 3.0.3
paths:
  /api/v1/Archive/:
    get:
      summary: gets list of all archives
      tags:
        - Archive
      responses:
        "200":
          description: A list of all existing archives is provided.
          content:
            application/json:
              schema:
                $ref: schemas/Archive.yaml#/components/schemas/Archive_List
              example:
                $ref: examples/Response/ArchiveList.json
  /api/v1/Archive/{id}:
    get:
      summary: gets a specific archive
      tags:
        - Archive
      responses:
        "200":
          description: A specific archive has been provided based on the ID.
          content:
            application/json:
              schema:
                $ref: schemas/Archive.yaml#/components/schemas/Archive
              example:
                $ref: examples/Response/Archive.json
    delete:
      summary: Deletes a specific archive
      tags:
        - Archive
      responses:
        "200":
          description: The specified archive has been deleted.
    put:
      summary: Edits the archive
      tags:
        - Archive
      responses:
        "201":
          description: The archive has been edited
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/Archive.yaml#/components/schemas/Archive
  /api/v1/Archive:
    post:
      summary: Create an archive
      tags:
        - Archive
      responses:
        "201":
          description: An archive is created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/Archive.yaml#/components/schemas/Archive
            example:
              $ref: examples/Request/CreateArchive.json
  /api/v1/Archive/{id}/VideoItems:
    put:
      summary: Add a videofile to an archive
      tags:
        - Archive
      responses:
        "201":
          description: A videofile is added to the archive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/MediaItem.yaml#/components/schemas/VideoItem
            example:
              $ref: examples/Response/AddVideoItemToArchive.json
    get:
      summary: Gets list of all videoitems within the archive
      tags:
        - Archive
      responses:
        "200":
          description: A list of all existing videoitems within the archive is provided.
          content:
            application/json:
              schema:
                $ref: schemas/MediaItem.yaml#/components/schemas/VideoItem_List
              example:
                $ref: examples/Response/VideoList.json
  /api/v1/Archive/{id}/VideoItems/{id}:
    get:
      summary: Gets a specific video item from an archive.
      tags:
        - Archive
      responses:
        "200":
          description: A specific video item from the archive is provided.
          content:
            application/json:
              schema:
                $ref: schemas/MediaItem.yaml#/components/schemas/VideoItem_List
              example:
                $ref: examples/Response/VideoList.json
  /api/v1/Archive/{id}/AudioItems:
    put:
      summary: Add an audiofile to an archive
      tags:
        - Archive
      responses:
        "201":
          description: An audiofile is added to the archive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/MediaItem.yaml#/components/schemas/AudioItem
            example:
              $ref: examples/Response/AddAudioItemToArchive.json
    get:
      summary: Gets list of all audioitems within the archive
      tags:
        - Archive
      responses:
        "200":
          description: A list of all existing audioitems within the archive is provided.
          content:
            application/json:
              schema:
                $ref: schemas/MediaItem.yaml#/components/schemas/AudioItem_List
              example:
                $ref: examples/Response/AudioList.json
  /api/v1/Archive/{id}/PhotoItems:
    put:
      summary: Add a photofile to an archive
      tags:
        - Archive
      responses:
        "201":
          description: A photofile is added to the archive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/MediaItem.yaml#/components/schemas/PhotoItem
            example:
              $ref: examples/Response/AddPhotoItemToArchive.json
    get:
      summary: Gets list of all photoitems within the archive
      tags:
        - Archive
      responses:
        "200":
          description: A list of all existing photofiles within the archive is provided.
          content:
            application/json:
              schema:
                $ref: schemas/MediaItem.yaml#/components/schemas/PhotoItem_List
              example:
                $ref: examples/Response/PhotoList.json
  /api/v1/Archive/{id}/Stories:
    put:
      summary: Add a story to an archive
      tags:
        - Archive
      responses:
        "201":
          description: A story is added to the archive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/Newsitem.yaml#/components/schemas/NewsItem
            example:
              $ref: examples/Response/AddNewsItemToArchive.json
    get:
      summary: Gets list of all stories within the archive
      tags:
        - Archive
      responses:
        "200":
          description: A list of all existing stories within the archive is provided.
          content:
            application/json:
              schema:
                $ref: schemas/Newsitem.yaml#/components/schemas/NewsItem_List
              example:
                $ref: examples/Response/NewsItemList.json
  /api/v1/newsitem/{id}:
    get:
      summary: Get a specific newsitem
      tags:
        - Newsitem
      responses:
        "200":
          description: Newsitem information
          content:
            application/json:
              schema:
                $ref: schemas/Newsitem.yaml#/components/schemas/NewsItem
              example:
                $ref: examples/Response/NewsItem.json
    patch:
      summary: Edits newsitem
      tags:
        - "Newsitem"
      responses:
        "200":
          description: Updated newsitem
          content:
            application/json:
              schema:
                $ref: schemas/Newsitem.yaml#/components/schemas/NewsItem
              example:
                $ref: examples/Response/NewsItem.json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/Newsitem.yaml#/components/schemas/EditNewsItem
            example:
              $ref: examples/Request/NewsitemEdit.json
    delete:
      summary: Deletes a specific newsitem
      tags:
        - Newsitem
      responses:
        "200":
          description: Newsitem removed
  /api/v1/newsitem:
    post:
      summary: Create a newsitem
      tags:
        - Newsitem
      responses:
        "201":
          description: Object created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/Newsitem.yaml#/components/schemas/ItemCreation
            example:
              $ref: examples/Request/CreateNewsItem.json
  /api/v1/ExportDestinations:
    get:
      summary: Get list of export destinations
      tags:
        - Export plugins
      responses:
        "200":
          description: List of plugins
          content:
            application/json:
              schema:
                $ref: schemas/ExportDestination.yaml#/components/schemas/Destination_List
              example:
                $ref: examples/Response/ExportDestinationList.json
  /api/v1/ExportDestinations/{id}:
    get:
      summary: Get export destination
      tags:
        - Export plugins
      responses:
        "200":
          description: Information on export plugin
          content:
            application/json:
              schema:
                $ref: schemas/ExportDestination.yaml#/components/schemas/Destination
              example:
                $ref: examples/Response/ExportDestination.json
    patch:
      summary: Edit plugin details
      tags:
        - Export plugins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/ExportDestination.yaml#/components/schemas/DestinationUpdate
            example:
              $ref: examples/Response/ExportDestinationUpdate.json
      responses:
        "200":
          description: Representation of the updated plugin.
          content:
            application/json:
              schema:
                $ref: schemas/ExportDestination.yaml#/components/schemas/Destination
              example:
                $ref: examples/Response/ExportDestination.json
  /api/v1/ExportDestinations/{id}/Actions.Publish:
    post:
      summary: Export news item to selected platform.
      tags:
        - Export plugins
      responses:
        "200":
          description: Object published.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/Request/PublishStory.json
  /api/v1/Address/{id}:
    get:
      summary: Get address by id
      tags:
        - Address
      responses:
        "200":
          description: Address is received
          content:
            application/json:
              schema:
                $ref: schemas/Address.yaml#/components/schemas/Address
              example:
                GUID: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    delete:
      summary: Delete an Address
      tags:
        - Address
      responses:
        "200":
          description: Address deleted.
      requestBody:
        description: Dit is een voorbeeld van hoe je een Address kunt verwijderen
        content:
          application/json:
            schema:
              $ref: schemas/Address.yaml#/components/schemas/Delete
            example:
              url: ../api/[controller]/"{3fa85f64-5717-4562-b3fc-2c963f66afa6}"
  /api/v1/Address:
    post:
      summary: Create an Address
      tags:
        - Address
      responses:
        "201":
          description: Address created.
      requestBody:
        description: Dit is een voorbeeld van hoe je een Address aan kunt maken met een requestbody.
        content:
          application/json:
            schema:
              $ref: schemas/Address.yaml#/components/schemas/Address
            example:
              $ref: examples/Response/Address.json
    patch:
      summary: update an Address
      tags:
        - Address
      responses:
        "200":
          description: Address updated.
      requestBody:
        description: Dit is een voorbeeld van hoe je een Address kunt updaten
        content:
          application/json:
            schema:
              $ref: schemas/Address.yaml#/components/schemas/Address
            example:
              $ref: examples/Response/Address.json
  /api/v1/Profiles:
    get:
      summary: Get list of /api/v1/Profiles/
      tags:
        - Profile
      responses:
        "200":
          description: List of profiles
          content:
            application/json:
              example:
                $ref: examples/Response/ProfileList.json
              schema:
                $ref: schemas/Profile.yaml#/components/schemas/ProfileList
  /api/v1/Profiles/{id}:
    get:
      summary: Get list of /api/v1/Profiles/
      tags:
        - Profile
      responses:
        "200":
          description: Representation of profile
          content:
            application/json:
              example:
                $ref: examples/Response/Profile.json
              schema:
                $ref: schemas/Profile.yaml#/components/schemas/Profile
    patch:
      summary: Update user details
      tags:
        - Profile
      responses:
        "200":
          description: Updated user
          content:
            application/json:
              example:
                $ref: examples/Response/Profile.json
              schema:
                $ref: schemas/Profile.yaml#/components/schemas/Profile
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/Request/ProfileEdit.json
            schema:
              $ref: schemas/Profile.yaml#/components/schemas/Profile
  /api/v1/CalendarItems:
    get:
      summary: Get list of calendar items
      tags:
        - Calendar
      responses:
        "200":
          description: List of calendar items
          content:
            application/json:
              example:
                $ref: examples/Response/CalendarItemList.json
              schema:
                $ref: schemas/CalendarItem.yaml#/components/schemas/CalendarItemList
  /api/v1/CalendarItems/{id}:
    get:
      summary: Get specific calendar item
      tags:
        - Calendar
      responses:
        "200":
          description: Representation of the calendar item
          content:
            application/json:
              example:
                $ref: examples/Response/CalendarItem.json
              schema:
                $ref: schemas/CalendarItem.yaml#/components/schemas/CalendarItem
    delete:
      summary: Delete specific calendar item
      tags:
        - Calendar
      responses:
        "201":
          description: Accepted, but no content
    patch:
      summary: Update specific calendar item
      tags:
        - Calendar
      responses:
        "200":
          description: Representation of the updated calendar item
          content:
            application/json:
              example:
                $ref: examples/Response/CalendarItem.json
              schema:
                $ref: schemas/CalendarItem.yaml#/components/schemas/CalendarItem
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/Request/CalendarItemEdit.json
            schema:
              $ref: schemas/CalendarItem.yaml#/components/schemas/CalendarItem