components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: A token retrieved from `authd`. If the token contains an `aud` claim, then Clapy expects it to contain the value `clapy`, otherwise the token will be rejected. Tokens with no `aud` claim are also accepted.
info:
    title: API Specificatie Redactie portaal.
    description: Dit document bevat de API specificaties van het Redactie portaal back-end.
    version: 0.0.1
servers:
  - url: https://host/api/v1
openapi: 3.0.3
paths:
  /api/v1/dashboard:
    get:
      summary: Dashboard items ophalen
      tags:
        - Dashboard
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: schemas/Dashboard.yaml#/components/schemas/Dashboard
          description: Dit is een voorbeeld van hoe items van opgehaald worden voor het dashboard.

  /api/v1/item/{id}: 
    get: 
      summary: Get specific item
      tags:
        - News item
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: schemas/Dashboard.yaml#/components/schemas/Item
                parameters: 
                - name: id
                in: path
                required: true 
          description: Dit is een voorbeeld van hoe een specifieke pagina geopend kan worden.
  /api/v1/item:
    post:
      summary: Create an item
      tags:
        - News item
      responses:
        '201':
          description: Object created.
      requestBody:
        description: Dit is een voorbeeld van hoe je een item aan kunt maken met een requestbody.
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/Dashboard.yaml#/components/schemas/Item
            example:
              id: 1
              name: Bitcoin is weer gedaald...
              creationDate: 15:16 21-03-2022
              author: Henk de Jong
  /api/v1/ExportDestinations:
    get:
      summary: Get list of export destinations
      tags:
        - Export plugins
      responses:
        '200':
          description: List of plugins
          content:
            application/json:
              schema:
                $ref: schemas/ExportDestination.yaml#/components/schemas/Destination_List
              example:
                $ref: examples/Response/ExportDestinationList.json
  /api/v1/ExportDestinations/{id}:
    get:
      summary: Get export destination
      tags:
        - Export plugins
      responses:
        '200':
          description: Information on export plugin
          content:
            application/json:
              schema:
                $ref: schemas/ExportDestination.yaml#/components/schemas/Destination
              example:
                $ref: examples/Response/ExportDestination.json
    patch:
      summary: Edit plugin details
      tags:
        - Export plugins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: schemas/ExportDestination.yaml#/components/schemas/DestinationUpdate
            example:
              $ref: examples/Response/ExportDestinationUpdate.json
      responses:
        '200':
          description: Representation of the updated plugin.
          content:
            application/json:
              schema:
                $ref: schemas/ExportDestination.yaml#/components/schemas/Destination
              example:
                $ref: examples/Response/ExportDestination.json
  /api/v1/ExportDestinations/{id}/Actions.Publish:
    post:
      summary: Export news item to selected platform.
      tags:
        - Export plugins
      responses:
        '200':
          description: Object published.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/Request/PublishStory.json
/api/v1/Address/{id}:
    get:
      summary: Get address by id
      tags:
        - Address
      responses:
        '200':
          description: Address is received
          content:
            application/json:
              schema:
                $ref: schemas/Address.yaml#/components/AddressModel
              example:
                GUID: 3fa85f64-5717-4562-b3fc-2c963f66afa6       
    delete:
        summary: Delete an Address
        tags:
        - Address
        responses:
        '200':
            description: Address deleted.
        requestBody:
        description: Dit is een voorbeeld van hoe je een Address kunt verwijderen
        content:
            application/json:
            schema:
                $ref: schemas/Address.yaml#/components/schemas/Delete
            example: 
                 url: ../api/[controller]/"{3fa85f64-5717-4562-b3fc-2c963f66afa6}"   
/api/v1/Address:
    post:
        summary: Create an Address
        tags:
        - Address
        responses:
        '201':
            description: Address created.
        requestBody:
        description: Dit is een voorbeeld van hoe je een Address aan kunt maken met een requestbody.
        content:
            application/json:
            schema:
                $ref: schemas/Address.yaml#/components/schemas/Address
            example:
              $ref: examples/Response/Address.json
            
    patch:
        summary: update an Address
        tags:
        - Address
        responses:
        '200':
            description: Address updated.
        requestBody:
        description: Dit is een voorbeeld van hoe je een Address kunt updaten
        content:
            application/json:
            schema:
                $ref: schemas/Address.yaml#/components/schemas/Address
            example:
              $ref: examples/Response/Address.json


/api/v1/Profiles:
get:
    summary: Get list of /api/v1/Profiles/
    tags:
    - Profile
    responses:
    '200':
        description: List of profiles
        content:
        application/json:
            example:
            $ref: examples/Response/ProfileList.json
            schema:
            $ref: schemas/Profile.yaml#/components/schemas/ProfileList
/api/v1/Profiles/{id}:
    get:
        summary: Get list of /api/v1/Profiles/
        tags:
        - Profile
        responses:
        '200':
            description: Representation of profile
            content:    
            application/json:
                example:
                $ref: examples/Response/Profile.json
                schema:
                $ref: schemas/Profile.yaml#/components/schemas/Profile
    patch:
      summary: Update user details
      tags:
        - Profile
      responses:
        '200':
          description: Updated user
          content:
           application/json:
             example:
               $ref: examples/Response/Profile.json
             schema:
               $ref: schemas/Profile.yaml#/components/schemas/Profile
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/Request/ProfileEdit.json
            schema:
              $ref: schemas/Profile.yaml#/components/schemas/Profile
