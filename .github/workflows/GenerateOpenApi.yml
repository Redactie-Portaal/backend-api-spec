# This is a basic workflow to help you get started with Actions

name: Generate api spec

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build
        run: |
          npm i
          npm run generate-html
      - name: html to pdf
        uses: fifsky/html-to-pdf-action@master
        with:
          htmlFile: ./output/Api_Spec.html
          outputFile: ./output/Api_Spec.pdf
          pdfOptions: '{"format": "A4", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}'
      - uses: actions/upload-artifact@v2
        with:
         name: Api Spec
         path: ./output/Api_Spec.html
      - uses: actions/upload-artifact@v2
        with:
         name: Api Spec PDF
         path: ./output/Api_Spec.pdf
      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
         format: YYYYMMDD-HH
         utcOffset: "+02:00"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }} 
          release_name: Release ${{ steps.current-time.outputs.year }} ${{ steps.current-time.outputs.day }} ${{ steps.current-time.outputs.time }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./output/Api_Spec.html
          asset_name: Api-Spec.html
          asset_content_type: text/html
